/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<'/', '/', Record<never, never>, Record<never, never>>,
    '/app': RouteRecordInfo<'/app', '/app', Record<never, never>, Record<never, never>, '/app/' | '/app/companies/' | '/app/companies/[id]' | '/app/companies/add' | '/app/suppliers/' | '/app/suppliers/[id]' | '/app/users/'>,
    '/app/': RouteRecordInfo<'/app/', '/app', Record<never, never>, Record<never, never>>,
    '/app/companies/': RouteRecordInfo<'/app/companies/', '/app/companies', Record<never, never>, Record<never, never>>,
    '/app/companies/[id]': RouteRecordInfo<'/app/companies/[id]', '/app/companies/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/app/companies/add': RouteRecordInfo<'/app/companies/add', '/app/companies/add', Record<never, never>, Record<never, never>>,
    '/app/suppliers/': RouteRecordInfo<'/app/suppliers/', '/app/suppliers', Record<never, never>, Record<never, never>>,
    '/app/suppliers/[id]': RouteRecordInfo<'/app/suppliers/[id]', '/app/suppliers/:id', { id: ParamValue<true> }, { id: ParamValue<false> }>,
    '/app/users/': RouteRecordInfo<'/app/users/', '/app/users', Record<never, never>, Record<never, never>>,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the volar plugin to automatically type useRoute()
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes: '/'
      views: never
    }
    'src/pages/app.vue': {
      routes: '/app' | '/app/' | '/app/companies/' | '/app/suppliers/' | '/app/users/' | '/app/companies/[id]' | '/app/suppliers/[id]' | '/app/companies/add' | '/app/companies' | '/app/suppliers' | '/app/users'
      views: 'default'
    }
    'src/pages/app/index.vue': {
      routes: '/app/'
      views: never
    }
    'src/pages/app/companies/index.vue': {
      routes: '/app/companies/'
      views: never
    }
    'src/pages/app/companies/[id].vue': {
      routes: '/app/companies/[id]'
      views: never
    }
    'src/pages/app/companies/add.vue': {
      routes: '/app/companies/add'
      views: never
    }
    'src/pages/app/suppliers/index.vue': {
      routes: '/app/suppliers/'
      views: never
    }
    'src/pages/app/suppliers/[id].vue': {
      routes: '/app/suppliers/[id]'
      views: never
    }
    'src/pages/app/users/index.vue': {
      routes: '/app/users/'
      views: never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the volar plugin to automatically type useRoute()
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
